{"ast":null,"code":"var _jsxFileName = \"D:\\\\Web-Portofolio\\\\react-project\\\\calculator-app\\\\src\\\\Calculator.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport './index.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst toLocaleString = number => String(number).replace(/(?<!\\..*)(\\d)(?=(?:\\d{3})+(?:\\.|$))/g, \"$1 \");\nconst removeSpaces = number => number.toString().replace(/\\s/g, \"\");\nfunction Calculator() {\n  _s();\n  let [count, setCount] = useState({\n    number: 0,\n    result: 0,\n    sign: \"\"\n  });\n  const optionCalculation = [\"%\", \"√\", \"C\", \"x\", 7, 8, 9, \"/\", 4, 5, 6, \"+\", 1, 2, 3, \"-\", \"@\", 0, \".\", \"=\"];\n  const numberClickHandler = e => {\n    e.preventDefault();\n    const number = e.target.innerHTML;\n    if (removeSpaces(count.number).length < 16) {\n      setCount({\n        ...count,\n        number: count.number % 1 === 0 ? Number(count.number + number) : count.number === 0 && number === \"0\" ? \"0\" : count.number + number,\n        result: !count.sign ? 0 : count.result\n      });\n    }\n  };\n  const commaClickHandler = e => {\n    e.preventDefault();\n    const comma = e.target.innerHTML;\n    setCount({\n      ...count,\n      number: !count.number.toString().includes(\".\") ? count.number + comma : count.number\n    });\n  };\n  const signClickHandler = e => {\n    e.preventDefault();\n    const valueSign = e.target.innerHTML;\n    setCount({\n      ...count,\n      sign: valueSign,\n      result: !count.result && count.number ? count.number : count.result,\n      number: 0\n    });\n  };\n  const equalsClickHandler = () => {\n    if (count.sign && count.number) {\n      const math = (a, b, sign) => sign === \"+\" ? a + b : sign === \"-\" ? a - b : sign === \"x\" ? a * b : a / b;\n      setCount({\n        ...count,\n        result: count.number = \"0\" && count.sign === \"/\" ? \"Can't divide with 0\" : toLocaleString(math(Number(removeSpaces(count.result)), Number(removeSpaces(count.number)), count.sign)),\n        sign: \"\",\n        number: 0\n      });\n    }\n  };\n  const percenClickHandler = () => {\n    let number = count.number ? parseFloat(count.number) : 0;\n    let result = count.result ? parseFloat(count.result) : 0;\n    setCount({\n      ...count,\n      number: number /= Math.pow(100, 1),\n      result: result /= Math.pow(100, 1),\n      sign: \"\"\n    });\n  };\n  const clearClickHandler = () => {\n    setCount({\n      ...count,\n      number: 0,\n      sign: \"\",\n      result: 0\n    });\n  };\n  const button = optionCalculation.map((item, i) => /*#__PURE__*/_jsxDEV(\"button\", {\n    value: item,\n    onClick: item === \"C\" ? clearClickHandler : item === \".\" ? commaClickHandler : item === \"+\" || item === \"-\" || item === \"x\" || item === \"/\" ? signClickHandler : item === \"=\" ? equalsClickHandler : item === \"%\" ? percenClickHandler : numberClickHandler,\n    children: item\n  }, i, false, {\n    fileName: _jsxFileName,\n    lineNumber: 105,\n    columnNumber: 7\n  }, this));\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"calculation-body\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Calculator App\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"bar-count\",\n        children: count.number\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 17\n      }, this), button]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n_s(Calculator, \"dSkyqnCMMZNQWhrioDW7ofiadwE=\");\n_c = Calculator;\nexport default Calculator;\nvar _c;\n$RefreshReg$(_c, \"Calculator\");","map":{"version":3,"names":["useState","toLocaleString","number","String","replace","removeSpaces","toString","Calculator","count","setCount","result","sign","optionCalculation","numberClickHandler","e","preventDefault","target","innerHTML","length","Number","commaClickHandler","comma","includes","signClickHandler","valueSign","equalsClickHandler","math","a","b","percenClickHandler","parseFloat","Math","pow","clearClickHandler","button","map","item","i"],"sources":["D:/Web-Portofolio/react-project/calculator-app/src/Calculator.js"],"sourcesContent":["import { useState } from 'react'\r\nimport './index.css'\r\n\r\nconst toLocaleString = (number) =>\r\n  String(number).replace(/(?<!\\..*)(\\d)(?=(?:\\d{3})+(?:\\.|$))/g, \"$1 \");\r\n\r\nconst removeSpaces = (number) => number.toString().replace(/\\s/g, \"\");\r\n\r\nfunction Calculator() {\r\n   let [count, setCount] = useState({\r\n    number : 0,\r\n    result: 0,\r\n    sign : \"\"\r\n   })\r\n\r\n   const optionCalculation = [\r\n    \"%\",\"√\",\"C\",\"x\",\r\n    7,8,9,\"/\",\r\n    4,5,6,\"+\",\r\n    1,2,3,\"-\",\r\n    \"@\",0,\".\", \"=\"\r\n   ]\r\n\r\n   const numberClickHandler = (e) => {\r\n       e.preventDefault();\r\n       const number = e.target.innerHTML;\r\n\r\n    if(removeSpaces(count.number).length < 16) {\r\n        setCount({\r\n            ...count, \r\n            number :\r\n            count.number % 1 === 0 ? Number(count.number+ number) :\r\n            count.number === 0 && number === \"0\" ? \"0\" :\r\n            count.number + number,\r\n            result : !count.sign ? 0 : count.result, \r\n            })\r\n    }     \r\n   }\r\n\r\n\r\n   const commaClickHandler = (e) => {\r\n      e.preventDefault()\r\n      const comma = e.target.innerHTML \r\n\r\n      setCount({\r\n        ...count,\r\n        number : !count.number.toString().includes(\".\") ? count.number + comma : count.number,\r\n      })\r\n   }\r\n\r\n   const signClickHandler = (e) => {\r\n    e.preventDefault()\r\n    const valueSign = e.target.innerHTML;\r\n\r\n    setCount({\r\n        ...count,\r\n        sign: valueSign,\r\n        result : !count.result && count.number ? count.number : count.result,\r\n        number : 0,\r\n    })\r\n   }\r\n\r\n   const equalsClickHandler = () => {\r\n     if (count.sign && count.number) {\r\n        const math = (a, b, sign) =>\r\n            sign === \"+\" ? a + b :\r\n            sign === \"-\" ? a - b :\r\n            sign === \"x\" ? a * b :\r\n            a / b;\r\n        \r\n        setCount({\r\n            ...count,\r\n            result:\r\n                count.number = \"0\" && count.sign === \"/\" ? \"Can't divide with 0\" :\r\n                toLocaleString(math(Number(removeSpaces(count.result)), Number(removeSpaces(count.number)), count.sign)),\r\n            sign : \"\",\r\n            number: 0,\r\n        });\r\n     }\r\n   }\r\n\r\n   const percenClickHandler = () => {\r\n    let number = count.number ? parseFloat(count.number) : 0;\r\n    let result = count.result ? parseFloat(count.result) : 0;\r\n  \r\n    setCount({\r\n      ...count,\r\n      number: (number /= Math.pow(100, 1)),\r\n      result: (result /= Math.pow(100, 1)),\r\n      sign: \"\",\r\n    });\r\n  };\r\n\r\n    const clearClickHandler = () => {\r\n        setCount({\r\n        ...count,\r\n        number:0,\r\n        sign:\"\",\r\n        result:0,\r\n        });\r\n    };\r\n\r\n\r\n   const button = optionCalculation.map((item, i) => \r\n      <button \r\n       key={i} \r\n       value={item} \r\n       onClick={\r\n        item === \"C\" ? clearClickHandler :\r\n        item === \".\" ? commaClickHandler :\r\n        item === \"+\" || item === \"-\" || item === \"x\" || item === \"/\" ? signClickHandler:\r\n        item === \"=\" ? equalsClickHandler :\r\n        item === \"%\" ? percenClickHandler:\r\n        numberClickHandler\r\n      }>{item}</button>\r\n   )\r\n\r\n   return (\r\n       <>\r\n            <div className=\"calculation-body\">\r\n                <h1>Calculator App</h1>\r\n                <h1 className=\"bar-count\">{count.number}</h1>\r\n                {button}\r\n            </div>\r\n       </>\r\n   )\r\n}\r\n\r\nexport default Calculator;"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAO,aAAa;AAAA;AAAA;AAEpB,MAAMC,cAAc,GAAIC,MAAM,IAC5BC,MAAM,CAACD,MAAM,CAAC,CAACE,OAAO,CAAC,sCAAsC,EAAE,KAAK,CAAC;AAEvE,MAAMC,YAAY,GAAIH,MAAM,IAAKA,MAAM,CAACI,QAAQ,EAAE,CAACF,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC;AAErE,SAASG,UAAU,GAAG;EAAA;EACnB,IAAI,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC;IAChCE,MAAM,EAAG,CAAC;IACVQ,MAAM,EAAE,CAAC;IACTC,IAAI,EAAG;EACR,CAAC,CAAC;EAEF,MAAMC,iBAAiB,GAAG,CACzB,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EACf,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,GAAG,EACT,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,GAAG,EACT,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,GAAG,EACT,GAAG,EAAC,CAAC,EAAC,GAAG,EAAE,GAAG,CACd;EAED,MAAMC,kBAAkB,GAAIC,CAAC,IAAK;IAC9BA,CAAC,CAACC,cAAc,EAAE;IAClB,MAAMb,MAAM,GAAGY,CAAC,CAACE,MAAM,CAACC,SAAS;IAEpC,IAAGZ,YAAY,CAACG,KAAK,CAACN,MAAM,CAAC,CAACgB,MAAM,GAAG,EAAE,EAAE;MACvCT,QAAQ,CAAC;QACL,GAAGD,KAAK;QACRN,MAAM,EACNM,KAAK,CAACN,MAAM,GAAG,CAAC,KAAK,CAAC,GAAGiB,MAAM,CAACX,KAAK,CAACN,MAAM,GAAEA,MAAM,CAAC,GACrDM,KAAK,CAACN,MAAM,KAAK,CAAC,IAAIA,MAAM,KAAK,GAAG,GAAG,GAAG,GAC1CM,KAAK,CAACN,MAAM,GAAGA,MAAM;QACrBQ,MAAM,EAAG,CAACF,KAAK,CAACG,IAAI,GAAG,CAAC,GAAGH,KAAK,CAACE;MACjC,CAAC,CAAC;IACV;EACD,CAAC;EAGD,MAAMU,iBAAiB,GAAIN,CAAC,IAAK;IAC9BA,CAAC,CAACC,cAAc,EAAE;IAClB,MAAMM,KAAK,GAAGP,CAAC,CAACE,MAAM,CAACC,SAAS;IAEhCR,QAAQ,CAAC;MACP,GAAGD,KAAK;MACRN,MAAM,EAAG,CAACM,KAAK,CAACN,MAAM,CAACI,QAAQ,EAAE,CAACgB,QAAQ,CAAC,GAAG,CAAC,GAAGd,KAAK,CAACN,MAAM,GAAGmB,KAAK,GAAGb,KAAK,CAACN;IACjF,CAAC,CAAC;EACL,CAAC;EAED,MAAMqB,gBAAgB,GAAIT,CAAC,IAAK;IAC/BA,CAAC,CAACC,cAAc,EAAE;IAClB,MAAMS,SAAS,GAAGV,CAAC,CAACE,MAAM,CAACC,SAAS;IAEpCR,QAAQ,CAAC;MACL,GAAGD,KAAK;MACRG,IAAI,EAAEa,SAAS;MACfd,MAAM,EAAG,CAACF,KAAK,CAACE,MAAM,IAAIF,KAAK,CAACN,MAAM,GAAGM,KAAK,CAACN,MAAM,GAAGM,KAAK,CAACE,MAAM;MACpER,MAAM,EAAG;IACb,CAAC,CAAC;EACH,CAAC;EAED,MAAMuB,kBAAkB,GAAG,MAAM;IAC/B,IAAIjB,KAAK,CAACG,IAAI,IAAIH,KAAK,CAACN,MAAM,EAAE;MAC7B,MAAMwB,IAAI,GAAG,CAACC,CAAC,EAAEC,CAAC,EAAEjB,IAAI,KACpBA,IAAI,KAAK,GAAG,GAAGgB,CAAC,GAAGC,CAAC,GACpBjB,IAAI,KAAK,GAAG,GAAGgB,CAAC,GAAGC,CAAC,GACpBjB,IAAI,KAAK,GAAG,GAAGgB,CAAC,GAAGC,CAAC,GACpBD,CAAC,GAAGC,CAAC;MAETnB,QAAQ,CAAC;QACL,GAAGD,KAAK;QACRE,MAAM,EACFF,KAAK,CAACN,MAAM,GAAG,GAAG,IAAIM,KAAK,CAACG,IAAI,KAAK,GAAG,GAAG,qBAAqB,GAChEV,cAAc,CAACyB,IAAI,CAACP,MAAM,CAACd,YAAY,CAACG,KAAK,CAACE,MAAM,CAAC,CAAC,EAAES,MAAM,CAACd,YAAY,CAACG,KAAK,CAACN,MAAM,CAAC,CAAC,EAAEM,KAAK,CAACG,IAAI,CAAC,CAAC;QAC5GA,IAAI,EAAG,EAAE;QACTT,MAAM,EAAE;MACZ,CAAC,CAAC;IACL;EACF,CAAC;EAED,MAAM2B,kBAAkB,GAAG,MAAM;IAChC,IAAI3B,MAAM,GAAGM,KAAK,CAACN,MAAM,GAAG4B,UAAU,CAACtB,KAAK,CAACN,MAAM,CAAC,GAAG,CAAC;IACxD,IAAIQ,MAAM,GAAGF,KAAK,CAACE,MAAM,GAAGoB,UAAU,CAACtB,KAAK,CAACE,MAAM,CAAC,GAAG,CAAC;IAExDD,QAAQ,CAAC;MACP,GAAGD,KAAK;MACRN,MAAM,EAAGA,MAAM,IAAI6B,IAAI,CAACC,GAAG,CAAC,GAAG,EAAE,CAAC,CAAE;MACpCtB,MAAM,EAAGA,MAAM,IAAIqB,IAAI,CAACC,GAAG,CAAC,GAAG,EAAE,CAAC,CAAE;MACpCrB,IAAI,EAAE;IACR,CAAC,CAAC;EACJ,CAAC;EAEC,MAAMsB,iBAAiB,GAAG,MAAM;IAC5BxB,QAAQ,CAAC;MACT,GAAGD,KAAK;MACRN,MAAM,EAAC,CAAC;MACRS,IAAI,EAAC,EAAE;MACPD,MAAM,EAAC;IACP,CAAC,CAAC;EACN,CAAC;EAGF,MAAMwB,MAAM,GAAGtB,iBAAiB,CAACuB,GAAG,CAAC,CAACC,IAAI,EAAEC,CAAC,kBAC1C;IAEC,KAAK,EAAED,IAAK;IACZ,OAAO,EACNA,IAAI,KAAK,GAAG,GAAGH,iBAAiB,GAChCG,IAAI,KAAK,GAAG,GAAGhB,iBAAiB,GAChCgB,IAAI,KAAK,GAAG,IAAIA,IAAI,KAAK,GAAG,IAAIA,IAAI,KAAK,GAAG,IAAIA,IAAI,KAAK,GAAG,GAAGb,gBAAgB,GAC/Ea,IAAI,KAAK,GAAG,GAAGX,kBAAkB,GACjCW,IAAI,KAAK,GAAG,GAAGP,kBAAkB,GACjChB,kBACD;IAAA,UAAEuB;EAAI,GATDC,CAAC;IAAA;IAAA;IAAA;EAAA,QASU,CACnB;EAED,oBACI;IAAA,uBACK;MAAK,SAAS,EAAC,kBAAkB;MAAA,wBAC7B;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAuB,eACvB;QAAI,SAAS,EAAC,WAAW;QAAA,UAAE7B,KAAK,CAACN;MAAM;QAAA;QAAA;QAAA;MAAA,QAAM,EAC5CgC,MAAM;IAAA;MAAA;MAAA;MAAA;IAAA;EACL,iBACR;AAEV;AAAC,GAtHQ3B,UAAU;AAAA,KAAVA,UAAU;AAwHnB,eAAeA,UAAU;AAAC;AAAA"},"metadata":{},"sourceType":"module"}