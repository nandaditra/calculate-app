{"ast":null,"code":"var _jsxFileName = \"D:\\\\Web-Portofolio\\\\react-project\\\\calculator-app\\\\src\\\\Calculator.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport './index.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Calculator() {\n  _s();\n  let [count, setCount] = useState({\n    number: 0,\n    sign: \"\"\n  });\n  const optionCalculation = [\"%\", \"√\", \"C\", \"x\", 7, 8, 9, \"/\", 4, 5, 6, \"+\", 1, 2, 3, \"-\", \"@\", 0, \".\", \"=\"];\n  const numberClickHandler = () => {\n    setCount(previousNumber => {\n      return {\n        ...previousNumber,\n        number: 1\n      };\n    });\n  };\n  const button = optionCalculation.map((item, i) => /*#__PURE__*/_jsxDEV(\"button\", {\n    value: item,\n    onClick: numberClickHandler,\n    children: item\n  }, i, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 7\n  }, this));\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"calculation-body\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Calculator App\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"bar-count\",\n        children: count\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this), button]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n_s(Calculator, \"TmU1MIflkiyFGPJQzepDTT+b+AI=\");\n_c = Calculator;\nexport default Calculator;\nvar _c;\n$RefreshReg$(_c, \"Calculator\");","map":{"version":3,"names":["useState","Calculator","count","setCount","number","sign","optionCalculation","numberClickHandler","previousNumber","button","map","item","i"],"sources":["D:/Web-Portofolio/react-project/calculator-app/src/Calculator.js"],"sourcesContent":["import { useState } from 'react'\r\nimport './index.css'\r\n\r\nfunction Calculator() {\r\n   let [count, setCount] = useState({\r\n    number : 0,\r\n    sign : \"\"\r\n   })\r\n\r\n   const optionCalculation = [\r\n    \"%\",\"√\",\"C\",\"x\",\r\n    7,8,9,\"/\",\r\n    4,5,6,\"+\",\r\n    1,2,3,\"-\",\r\n    \"@\",0,\".\", \"=\"\r\n   ]\r\n\r\n   const numberClickHandler = () => {\r\n     \r\n     setCount(previousNumber => {\r\n         return {\r\n            ...previousNumber, \r\n            number: 1\r\n        }\r\n       }\r\n     )\r\n   }\r\n\r\n   const button = optionCalculation.map((item, i) => \r\n      <button key={i} value={item} onClick={numberClickHandler}>{item}</button>\r\n   )\r\n\r\n   return (\r\n       <>\r\n            <div className=\"calculation-body\">\r\n                <h1>Calculator App</h1>\r\n                <h1 className=\"bar-count\">{count}</h1>\r\n                {button}\r\n            </div>\r\n       </>\r\n   )\r\n}\r\n\r\nexport default Calculator;"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAO,aAAa;AAAA;AAAA;AAEpB,SAASC,UAAU,GAAG;EAAA;EACnB,IAAI,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGH,QAAQ,CAAC;IAChCI,MAAM,EAAG,CAAC;IACVC,IAAI,EAAG;EACR,CAAC,CAAC;EAEF,MAAMC,iBAAiB,GAAG,CACzB,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EACf,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,GAAG,EACT,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,GAAG,EACT,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,GAAG,EACT,GAAG,EAAC,CAAC,EAAC,GAAG,EAAE,GAAG,CACd;EAED,MAAMC,kBAAkB,GAAG,MAAM;IAE/BJ,QAAQ,CAACK,cAAc,IAAI;MACvB,OAAO;QACJ,GAAGA,cAAc;QACjBJ,MAAM,EAAE;MACZ,CAAC;IACF,CAAC,CACF;EACH,CAAC;EAED,MAAMK,MAAM,GAAGH,iBAAiB,CAACI,GAAG,CAAC,CAACC,IAAI,EAAEC,CAAC,kBAC1C;IAAgB,KAAK,EAAED,IAAK;IAAC,OAAO,EAAEJ,kBAAmB;IAAA,UAAEI;EAAI,GAAlDC,CAAC;IAAA;IAAA;IAAA;EAAA,QAA2D,CAC3E;EAED,oBACI;IAAA,uBACK;MAAK,SAAS,EAAC,kBAAkB;MAAA,wBAC7B;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAuB,eACvB;QAAI,SAAS,EAAC,WAAW;QAAA,UAAEV;MAAK;QAAA;QAAA;QAAA;MAAA,QAAM,EACrCO,MAAM;IAAA;MAAA;MAAA;MAAA;IAAA;EACL,iBACR;AAEV;AAAC,GAtCQR,UAAU;AAAA,KAAVA,UAAU;AAwCnB,eAAeA,UAAU;AAAC;AAAA"},"metadata":{},"sourceType":"module"}